defaults:
  - agent: dqn

env:
  obs_repr: lane_count # possible values: lane_count, lane_waiting_time_count, and map
  action_choice: phase
  reward_function: pressure # : pressure, queue_diff, queue_length
  network: sumo1x1
  action_interval: 10
  use_gui: False

exp:
  name: first

  train: True
  evaluate: True
  test: False
  seed: null
  debug: False
  interface: libsumo
  use_wandb: False
  load_model: /mnt/c/Users/Larr/Documents/lfrancis/980/signal_env_design/data/output_data/tsc/sumo_dqn/sumo1x3/debug/model/155
  use_gui: False

  episodes: 200
  steps: 3600
  eval_steps: 3600
  batch_size: 64
  learning_rate: 0.001


wandb:
  name: traffic-exp
  entity: lfrancis
  project: signal-env-exp



  




# parser = argparse.ArgumentParser(description='Run Experiment')
# parser.add_argument('--thread_num', type=int, default=4, help='number of threads')  # used in cityflow
# parser.add_argument('--ngpu', type=str, default="0", help='gpu to be used')  # choose gpu card
# parser.add_argument('--prefix', type=str, default='test', help="the number of prefix in this running process")
# parser.add_argument('--seed', type=int, default=None, help="seed for pytorch backend")
# parser.add_argument('--debug', type=bool, default=True)
# parser.add_argument('--interface', type=str, default="libsumo", choices=['libsumo','traci'], help="interface type") # libsumo(fast) or traci(slow)
# parser.add_argument('--delay_type', type=str, default="apx", choices=['apx','real'], help="method of calculating delay") # apx(approximate) or real

# parser.add_argument('-t', '--task', type=str, default="tsc", help="task type to run")
# parser.add_argument('-a', '--agent', type=str, default="dqn", help="agent type of agents in RL environment")
# parser.add_argument('-w', '--world', type=str, default="cityflow", choices=['cityflow','sumo'], help="simulator type")
# parser.add_argument('-n', '--network', type=str, default="cityflow1x1", help="network name")
# parser.add_argument('-d', '--dataset', type=str, default='onfly', help='type of dataset in training process')
